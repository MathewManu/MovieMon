apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'war'
apply plugin: 'eclipse'
apply plugin: 'jetty'
apply plugin: 'application'

String tomcatHome = "C:/Anushya/Softwares/apache-tomcat-9.0.0.M1"
//String tomcatHome = "C:/Users/mmanu/workspace/tomcat8"
String tomcatWebappsLocation = tomcatHome + "/webapps/"
String tomcatConf = tomcatHome + "/conf/Catalina/localhost"
String tomcatBin = tomcatHome + "/bin/"

mainClassName = "imdb.TestApp"

sourceCompatibility = 1.8
version = '1.0'
war {
    manifest {
        attributes 'Implementation-Title': 'Movie Mon',
                   'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
}

dependencies {
    compile group: 'commons-collections', name: 'commons-collections', version: '3.2'
    compile 'com.google.code.gson:gson:2.3.1'
    compile 'commons-io:commons-io:2.4'
    compile 'org.hsqldb:hsqldb:2.3.3'
    compile 'org.mybatis:mybatis:3.3.0'
    compile 'org.jsoup:jsoup:1.8.2'
    compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.22'
    compile 'org.glassfish.jersey.media:jersey-media-json-jackson:2.22'
    compile 'org.glassfish.jersey.media:jersey-media-sse:2.22'
    compile 'log4j:log4j:1.2.17'
         
    compile 'javax.servlet:javax.servlet-api:3.0.1'
    runtime 'org.glassfish.jersey.containers:jersey-container-servlet:2.22'
    
    
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}

task myDist(type: Zip){
  def baseDir = { archiveName - ".zip" }
  into(baseDir){
    from(project.file("src/dist"))
    into("lib") {
        from(jar)
        from(project.configurations.runtime)
    }
    
    into(".") {
    	from("src/main/resources/mybat.bat")
    }
    
    into(".") {
    	from("build/libs/MovieMon-1.0.war")
    }
  }
}
task tomCopy (dependsOn: war){
    copy {
        from "build/libs/MovieMon-1.0.war"
        into tomcatWebappsLocation
        rename ("MovieMon-1.0.war", "ROOT.war")
    }
    if (!file(tomcatConf+"/"+"moviemon#posters.xml").exists())
    copy {
        from "src/main/resources/moviemon#posters.xml"
        into tomcatConf
    }    
}

task deploy(type:Exec) {
        println "copying the war file ..."
        
        tasks.tomCopy.execute()
        
        println "Starting tomcat server..."
        
        workingDir tomcatBin
        commandLine 'cmd', '/C', 'startup.bat'
}

task dbr(type: JavaExec) {
  classpath = sourceSets.main.runtimeClasspath
  main = 'imdb.install.DBReset'
}


jettyRun.contextPath = ''
